version: '3.8'

services:
  zerabot:
    build: .
    container_name: zerabot
    restart: unless-stopped
    env_file: .env
    environment:
      - ENVIRONMENT=production
      - TZ=UTC
      - AUTOCERT_DIR=/app/certs  # Directory for Let's Encrypt certificates
    ports:
      - "80:80"       # HTTP for Let's Encrypt challenge
      - "443:443"     # HTTPS
      - "8080:8080"   # Optional: HTTP API
    volumes:
      - ./certs:/app/certs
      - ./data:/app/data
      # Use a bind mount for certs to ensure proper permissions
    networks:
      - zerabot-network
    # Ensure proper permissions for the certs directory
    user: "1000:1000"  # Match the non-root user in the container
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Uncomment and configure if you need a local PostgreSQL instance
  # db:
  #   image: postgres:15-alpine
  #   container_name: zerabot-db
  #   restart: always
  #   environment:
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_DB: ${DB_NAME}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - zerabot-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  zerabot-network:
    driver: bridge

volumes:
  postgres_data:
  data:
