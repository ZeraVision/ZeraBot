version: '3.8'

services:
  zerabot:
    build: .
    container_name: zerabot
    restart: unless-stopped
    env_file: .env
    environment:
      - ENVIRONMENT=production
      - TZ=UTC
      - AUTOCERT_DIR=/app/certs
      - LOG_LEVEL=info
      - GODEBUG=netdns=0
      - GIN_MODE=release
    expose:
      - "8080"
    ports:
      - "50051:50051"
    volumes:
      - ./certs:/app/certs:rw
      - data:/app/data
    user: root
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "production"

  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy_data:/data
      - ./caddy_config:/config
    depends_on:
      - zerabot

  # Uncomment and configure if you need a local PostgreSQL instance
  # db:
  #   image: postgres:15-alpine
  #   container_name: zerabot-db
  #   restart: always
  #   environment:
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_DB: ${DB_NAME}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - zerabot-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  # postgres_data:
  data:
